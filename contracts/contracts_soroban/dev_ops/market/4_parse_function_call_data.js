
const {
    xdr,StrKey, nativeToScVal, Address, ScInt, scValToBigInt, scValToNative
} = require('@stellar/stellar-sdk');


let data =   [0,0,0,17,0,0,0,1,0,0,0,3,0,0,0,15,0,0,0,15,99,111,110,116,114,97,99,116,65,100,100,114,101,115,115,0,0,0,0,18,0,0,0,1,188,72,161,109,207,154,14,112,30,197,67,149,165,225,248,65,189,239,172,86,36,212,229,192,125,29,112,77,94,207,63,207,0,0,0,15,0,0,0,16,102,117,110,99,116,105,111,110,67,97,108,108,68,97,116,97,0,0,0,13,0,0,1,204,0,0,0,17,0,0,0,1,0,0,0,2,0,0,0,15,0,0,0,11,109,101,115,115,97,103,101,68,97,116,97,0,0,0,0,13,0,0,1,124,0,0,0,17,0,0,0,1,0,0,0,7,0,0,0,15,0,0,0,5,98,117,121,101,114,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,207,162,38,68,10,91,52,15,0,21,37,157,153,0,131,166,134,63,37,184,227,238,75,155,40,2,176,105,174,170,100,13,0,0,0,15,0,0,0,11,109,101,115,115,97,103,101,84,121,112,101,0,0,0,0,14,0,0,0,11,67,114,101,97,116,101,79,114,100,101,114,0,0,0,0,15,0,0,0,11,110,102,116,67,111,110,116,114,97,99,116,0,0,0,0,18,0,0,0,1,21,188,83,145,140,215,224,148,234,241,37,214,255,124,243,170,172,154,117,119,46,215,170,161,180,25,46,82,126,107,238,190,0,0,0,15,0,0,0,5,110,102,116,73,100,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,66,0,0,0,15,0,0,0,5,112,114,105,99,101,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,226,64,0,0,0,15,0,0,0,10,112,114,105,99,101,84,111,107,101,110,0,0,0,0,0,13,0,0,0,40,66,66,52,69,57,57,50,100,97,65,54,97,53,49,56,55,50,67,49,53,66,102,57,100,98,56,102,48,55,50,54,50,52,98,57,49,68,51,55,66,0,0,0,15,0,0,0,9,114,101,99,105,112,105,101,110,116,0,0,0,0,0,0,13,0,0,0,40,66,66,52,69,57,57,50,100,97,65,54,97,53,49,56,55,50,67,49,53,66,102,57,100,98,56,102,48,55,50,54,50,52,98,57,49,68,51,55,66,0,0,0,15,0,0,0,11,109,101,115,115,97,103,101,70,117,110,99,0,0,0,0,15,0,0,0,10,119,109,98,82,101,99,101,105,118,101,0,0,0,0,0,15,0,0,0,9,110,101,116,119,111,114,107,73,100,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,148]

data = "0000001100000001000000030000000f0000000f636f6e747261637441646472657373000000000d00000028373761643662313561323234666565623538303563346239653361663939343862386239303763310000000f0000001066756e6374696f6e43616c6c446174610000000d000001d00000001100000001000000020000000f0000000b6d65737361676544617461000000000d000001800000001100000001000000070000000f000000056275796572000000000000120000000000000000cfa226440a5b340f0015259d990083a6863f25b8e3ee4b9b2802b069aeaa640d0000000f0000000b6d65737361676554797065000000000e0000000b43616e63656c4f72646572000000000f0000000b6e6674436f6e747261637400000000120000000115bc53918cd7e094eaf125d6ff7cf3aaac9a75772ed7aaa1b4192e527e6beebe0000000f000000056e66744964000"
let buf_data = new Buffer.from(data,'hex');
const run = async ()=>{

    let sc = xdr.ScVal.fromXDR(buf_data);


    let retObj = scValToNative(sc);

    console.log("outboundFuncationCallData", retObj);

   // let ct = retObj.contractAddress;
    //console.log('ct: ',ct.toString())


    let functiaonDataBytes = retObj.functionCallData
    let functionData = xdr.ScVal.fromXDR(functiaonDataBytes);
    let funcation2 = scValToNative(functionData)
    console.log("functionData", funcation2)

    let messageDatabyt = funcation2.messageData;

    console.log("message_data", scValToNative(xdr.ScVal.fromXDR(messageDatabyt)));
/*
    let messageData = scValToNative(xdr.ScVal.fromXDR(messageDatabyt));
    let priceToken = messageData.priceToken;
    console.log('priceToken: ', priceToken);

    console.log(priceToken.toString());*/

}

run();


